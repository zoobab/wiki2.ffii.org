## -*- dok: ukparl050216; lang: en; coding: iso-8859-1; mode: fundamental; -*-
## datum: 2005-02-16
## url: http://swpat.ffii.org/papers/europarl0309/ukparl050216/
## title: House of Commons updated on Software Patent Directive 
->
[ [:SwpatukEn: UK]
| [:SwpatcninoEn: Patent News]
]
----

''6th March 2004 -- FFII has received a text from the intranet of the UK Parliament which appears to have been written by civil servants 3 weeks ago to keep members of parliament updated on the software patent directive.  The text presents the case in a far more balanced way than the usual statements of the UK Patent Office, which, as a mouthpiece of the government, has been nearly monopolising the political discourse on the dossier in the UK for a long time.''

== Introductory analysis ==

(by [:HartmutPilchEn: Hartmut Pilch])

The document quotes various viewpoints, but still stops short of poking into the wounds of the patent establishment.  It does not directly raise the question of legitimacy of the EPO and UK caselaw.  Also, it does not seriously challenge the fictions of this caselaw, including the assertion that "technical" software is patentable under European law and that the "technical contribution" criterion as practised by the "current law" is meaningful.

The document ends with a statement of a conservative leader in the UK parliament which is in fact copy&pasted from a statement by [:SwpatmharbourEn: Malcolm Harbour], the tory IP spokesman in the EP, who has been carrying the doublespeak of the patent lobby to an extreme.  However the text does not point this out.

It also quotes Richard Allan MP of the Libdems with a demand that the "status quo" not be changed.  As we know, this demand is quite open to interpretation in a context where we have several competing interpretations of the law which all claim to be the status quo.

The Library Standard Note from 16th February 2005 from the UK House of Commons is a standard note, written by a civil servant research worker.  It appears to be a kind of executive summary to keep !MPs and their staff up to speed with issues. These House of Commons intranet documents are not found on publication sites.

This text may be worth showing to UK members of parliament when writing letters.

== The Text -- static version ==

We have published a [http://swpat.ffii.org/papers/europarl0309/ukparl050216/ static, uncommentable version].  

You can insert links and annotations into the editable version below.
Hopefully this will then become even more informative for UK politicians.

== The Text -- editable version ==

SN/SC/3398

This Note describes the arguments surrounding the Computer Implemented Inventions Directive (popularly known as the Software Patents Directive), provides position statements for the major parties and details the progress that the Directive has made through the European legislature.

Further information can be found in Library Standard Note SN/SC/1612.


=== A. A software patent Directive ===

The issue of software patents has become increasingly controversial following plans by the European Commission and Parliament to update the present system through a proposed Directive.  The Directive would include clarifying the position regarding software.  Under current law, passed in 1973, software cannot be patented.  However, a clarification in 1986 made it  possible in the eyes of the European Patent Office and, since then, around 30,000 software patents have been approved.

The draft Directive would allow the patenting of computer-implemented inventions provided they meet certain criteria; however some opponents are concerned that the plans will, in effect, enable the patenting of all software.


This has raised concerns as lobbyists argue that software is a special case and should not fall under-the same rules as other inventions:


---- indented text
Heres why: before the 1986 clarification, the only things that could be patented were physical inventions.  Drugs and oil rigs can be compared with others, and can thus be patented.  You cant patent business plans or mathematical formulae, the rules to games, philosophical systems or religions.  These are all abstract ideas, and are specifically excluded.

  "Software is exactly the same as a business method in that you're
  writing down a series of steps, and giving that to something to
  execute... you're giving the series of steps to a machine to execute
  instead of a person," says Alex Hudson, vice chairman of the UK's
  Association for Free Software.  "It feels like a technical subject
  but, at the end of the day, the generation of a piece of software is
  very much like thinking up a game or a new business method, or any
  other abstract idea."

The loophole that allows the software patents to be granted is the idea that the software code has a physical effect.  If a program allows a machine to be more efficient, or a drug to be administered in a better way, or a previously unattainable effect to be achieved, then the software, proponents say, has what is called technical effect.  Hence, you can patent it.  No one has clarified exactly how much of-an effect on how much of a machine a program must have.

When you then have the premise that all computers are general-purpose machines, and that all software gives these general- purpose machines new abilities and improvements, and hence a technical effect, then you have the premise that software is patentable.

Opponents point out that software code is really just a written expression of an abstract idea.  The code itself describes the idea.  This leads to some nasty legal ramifications.  For one thing, the implementation is irrelevant.  The code you write the program in doesnt matter. [...] Thus, for the first time, and contrary to usual practice, the patenting of software introduces the patenting of abstract ideas, and not just their implementation.  This, say opponents, could be very dangerous indeed. 

A large program might contain tens of thousands of discrete ideas and techniques in action.  So, in the words of Richard Stallman, the famed free software activist, "software patents are like landmines for programmers.  At each design decision, there is a chance you will step on a patent and it will destroy your project.  Considering the large number of ideas that must be combined in a modem program, the danger becomes very large.: ("Patent Unfairly", The Guardian 8th July 2004.)

However, some argue that the proposed Directive would not allow the blanket granting of software patents.  John Gray, a patent lawyer with patent attorney Fitzpatricks, said:

  There are no moves to set up a system similar to the US: the draft
  Directive is actually intended to reinforce the boundaries established
  by case law, and prevent any drift in a more liberal direction.

  The governments of member states have been trying, through the
  European Council and Commission, to consolidate and formalise the
  status quo in European patent law. But this effort has been frustrated
  by a small but highly organised and vocal lobby, based on a selective
  and romantic image of computer programmers all working alone on their
  own projects.

  The current law and the draft directive do not allow patents to be
  granted for computer programs, methods of doing business and
  mathematical methods (among other things) as such, but they also make
  clear that inventions making a serious technical contribution are not
  excluded from patenting merely because modem apparatus in the form of
  a computer is used in their implementation. (http://Out-law.com 19
  August 2004)

The Government also expressed this view:

  The approach adopted by the UK Government and the European
  Commission in the proposed Directive is to clarify the current
  position on patentability of computer-implemented inventions and
  confirm that only those inventions that involve a technical
  contribution can be protected by patents.  The Government believes
  that this clarity is beneficial for industry and consumers alike.

  The Government believes that we should aim to avoid the width of
  patentability now allowed in the United States: this is why it pressed
  the European Commission for a Directive following its
  consultations. (Patent Office faq. 8 December
  2004. http://www.patent.gov.uk/about/ippd/faq/softpat.htm)

The Government believes that the proposals will not extend the patentability of software:

  The Directive does not permit the patenting of all
  computer-implemented inventions, only those inventions involving
  software which make a technical contribution.  So, general
  business software which runs a financial system, for example, will not
  be patentable.  However, a new and inventive way of converting a
  digital signal into a communication protocol in a mobile phone would
  be patentable. (Patent Office faq. 8 December
  2004. http://www.patent.gov.uk/about/ippd/faq/softpat.htm )


In September 2003, the European Parliament, in the First Reading of
the Directive, introduced amendments that would severely restrict the
granting of software patents including those involving a "technical
contribution".

  Politically, these amendments were supported almost unanimously by
  small parties on both the right and left, while the larger groupings
  (social democrats, liberals and conservatives) were all split, with
  the balance of social democrats leaning in favour of amendment, and
  conservatives leaning against.
  (http://en.wikipedia.org/wiki/EU_Directive_on_the_Patentability_of_Computer-Implemented_Inventions)

These amendments were not accepted by the Council of Ministers, who in
May 2004 voted against them and reinstated the patenting of
computer-implemented inventions where the invention has a "technical
character".

When asked whether the Directive, as amended by the Council, would
change the current situation in the UK, Patricia Hewitt, Secretary of
State for Trade and Industry, said:

  Present UK copyright law protects an original computer program that
  has been recorded in some form, but does not protect the idea behind
  the program.  The current draft of the directive does not alter
  copyright protection, but confirms that innovators can gain patent
  protection for inventions involving the use of computer programs,
  providing they meet existing patentability requirements, which include
  making a technical contribution. (House of Commons Debate 16 September
  2004 c1728W)

Recent controversy has stalled the progress of the Directive.  The Council has yet to vote on a  Common Position, and therefore the Directive has not been passed back to Parliament.  This is because Poland decided to oppose the Position and a number of other countries expressed reservations about the text, leading to a final vote on the Position being delayed.  No date has yet been chosen for more discussion on the Directive.  Should the Parliament and Council continue to disagree, the legislation will have to go before a conciliation committee. (The Guardian as above)

A further development occurred on 2 February 2005 when the European Parliament's Legal Affairs Committee voted overwhelmingly to ask the Commission to restart the legislative process.  Parliament President, Josep Borrell will now formally request the European Commission to submit a new proposal.  This request by the Committee could tip the balance of power to those who disapprove of the Directive, however Europa, the European Union's website, reports:

  At this stage, the future of software patenting in Europe remains open
  and difficult to predict. While some [...] Committee members said they
  believed the current proposed directive has no future, others argued
  that a compromise solution could still be found if the Council and the
  Commission accept to work on a new draft incorporating the
  first-reading amendments voted by the Parliament in September 2003.

However, the Commission has no obligation to answer the Parliaments' request positively, and the Common Position agreed by Member States in May 2004 which included only a minority of the Parliament's first-reading amendments could still be put on the agenda of an upcoming Council meeting(s) as an A-item (i.e. An item to be adopted without further debate).  Such a move, though, could be blocked by Member States opposing the current draft.  This would lead to further delays in the adoption of the text, a scenario that would not please supporters of the proposed legislation.  

  It's a pity it has already been delayed for so many months. "It
  means increased uncertainty to companies in the long run," said Leo
  Baumann, spokesman for the European Information and Communications
  Technology Industry Association (EICTA). (Europa 4 February 2005
  http://europa.eu.int/idabc/en/document/3842/194)

A resolution to this debate may take considerable time.

=== B. Party positions ===

Richard Allan MP, the Liberal Democrat spokesman on IT, called for the
government to ensure that there would be no change to the status quo
over the boundaries of what could be patented.  He stressed that there
should be no move towards the American system of allowing the
patenting of software. ("More heat than light" The Times, 25 January
2005)

Michael Fabricant MP, Shadow Minister for Economic Affairs, said:

  Conservatives have consistently supported the need for the European
  Union to have a clear patent regime that excludes computer software
  and business methods from patentability.  This will reinforce the
  EU's competitive position and give us a different regime from the US
  and Japan, where patents are being granted in both these
  areas. Doing nothing is not an option.  European Patent Offices are
  already dealing with applications for patents involving software in
  different ways in different countries. Therefore, the European
  Commission has put forward a Directive that is intended to lay down
  clear rules under which inventions including computer software can be
  considered eligible for patenting.

  This proposal Directive on Computer Implemented Inventions is not
  intended to extend existing European Patent Law into any new areas.
  It is designed to give patent inspectors an unambiguous legal
  framework within which they can make judgements on the patentability
  of inventions containing computer software.

  It is intended to give them secure legal grounds for refusing a
  patent for an invention involving pure software, algorithms, or
  business methods, which can be sustained if later challenged in court.
  The Directive does not affect the development of open source software,
  a point of great concern to many software professionals.

  The original Directive text has been controversial.  The details are
  critical, which is why there has been so much argument about them.
  The patentability rules must be broad enough to ensure that pure
  software and business methods are effectively excluded.  At the same
  time, they must not be so all embracing that they damage the
  legitimate protection afforded to other categories of inventions where
  software produces a genuine technical effect.
    (Personal communication from Michael Fabricant MP, 2 February 2005)

End of SN/SC/3398
