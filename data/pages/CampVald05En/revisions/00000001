## -*- dok: CampVald05; lang: en; coding: iso-8859-1; mode: fundamental; -*-
## url: http://swpat.ffii.org/papers/campvald05/
## title: Microsoft-sponsored study identifies 50 good software patents
->
[ [:SwpatsiskuEn: Studies]
| [:SwpatcninoEn: News]
]
----

''Two computer scientists have published a study on 50 famous patents on respectable advances in computer science and find that these patents are not overly broad or trivial and did, in spite of the long duration of 20 years, not impede progress in the field.  They conclude from this that software patenting, if handled properly, is beneficial and necessary.  The research appears to be part of a project that is financed by Microsoft.  One of the involved researchers is already known from a Microsoft-financed attempt to refute a patent-critical study by US economists which had become politicised in the debate about the EU directive.  Their names are also linked to a Brussels think tank which proclaims that "patentability of software is in the nature of things" and attributes opposite views to "anti-Americanism" and "anti-capitalistic zealotry".''

== The Abstract ==

 "A Technical Critique of Fifty Software Patents"

 BY: MARTIN CAMPBELL-KELLY (mck@dcs.warwick.ac.uk)
      University of Warwick, Department of Computer Science
 PATRICK VALDURIEZ (Patrick.Valduriez@inria.fr)
      French National Institute for Research in Computer Science and Control

 Document: Available from the SSRN Electronic Paper Collection:
      http://papers.ssrn.com/paper.taf?abstract_id=650921

 Date: January 2005

 ABSTRACT:
 The legal, economic, and technical literatures are replete with
 discussions on the desirability or otherwise of software patents. But
 each strand of this debate has some limitations. The legal literature is
 for the most part based on case law, and thus is difficult to generalize.
 The economic literature is typically based on the statistical analysis of
 large numbers of patents, but tends to ignore the technical arguments
 either for or against software patents. The technical literature
 - frequently hostile to patents - is most often based on an examination
 of a small number of pathologically bad patents, and thus like the law
 literature does not shed much light on software patents in general.

 This paper attempts to fill in these gaps in the analysis. We focus on
 the technical merits of what, on the surface at least, should be good
 software patents - a set of 50 most highly cited patents. Of course our
 approach cannot address all of the controversies surrounding software
 patents. Instead, we aim our inquiries on what insights technical
 specialists might provide lawyers, economists, and policymakers studying
 software patents. In particular, we ask, from a technician's viewpoint:

      Are software patents too obvious?
      Is the level of disclosure adequate?
      Are patents real - do they represent real innovations or are 
                         they strategic?
      Are software patents too broad in their technical coverage?
      Do software patents last too long?

 We conclude that for the set of patents examined here: they are not too
 obvious in general; the level of disclosure is often less than optimal,
 indicating the need for reform; they are almost all for real innovations;
 some are too broad technically but most are not; they do last too long,
 but this has little to no apparent impact on the industry; and some
 software inventions need both patent and copyright protection. Taken
 altogether, software patent critics do have some valid points (especially
 regarding disclosure), but the accusations that software patents are
 generally obvious, trivial, and impede progress do not stand up to scrutiny.

This reasoning is strange, since generalisations such as "all software patents
are broad and trivial" are rather rare, and the authors themselves admit that
they have picked 50 "good patents" based on the criterion that they are related
to well-respected advances in computer science.  

However the findings should be worth further examination and discussion.  In
particular the finding that these patents are in general not overly broad
merits some attention.  It does not correspond to what FFII has found so
far when examining patents related to [http://swpat.ffii.org/patents/mpeg/ MP3] 
and [http://swpat.ffii.org/patents/jpeg/ JPEG].

== Authors and backgrounds ==

 * http://papers.ssrn.com/paper.taf?abstract_id=650921
 * http://papers.ssrn.com/sol3/Delivery.cfm/SSRN_ID650921_code439405.pdf?abstractid=650921&mirid=2
 * http://www.google.com/search?q=SSRN_ID650921_code439405.pdf&sourceid=mozilla-search&start=0&start=0&ie=utf-8&oe=utf-8&client=firefox&rls=org.mozilla:en-US:unofficial

This study comes from the same people who [http://www.researchineurope.org/policy/hahn_wallsten.pdf criticised an early unpublished version of a patent-critical paper from Bessen and Hunt], giving as a motivation the fear that this paper could unduly influence on the European debate on software patent legislation.  Bessen and Hunt later [http://www.researchoninnovation.org/hahn.pdf reacted to the paper and addressed the points which it had raised in a revised version].

When looking at the author information of the PDF file you find "idanilkina" in the author field.

That is likely to be Irina Danilkina, and if you feed that name to google, you again find a link to the [http://www.researchineurope.org/policy/hahn_wallsten.pdf Bessen & Hunt criticism] on the first page.

And indeed, a quote from the latter:

 We would like to thank Anne Layne-Farrar and Bernard Reddy for helpful
 comments and '''Irina Danilkina''' for research assistance. The authors
 gratefully acknowledge the support of Microsoft.

More evidence: a footnote on page 6 of a [http://www.ellak.gr/pub/osdocs/misc/gov_prefs4promo_oss.pdf "research paper" advising against promotion of open source software by governments]:

 Evans is with NERA Economic Consulting in Cambridge, MA and the Center
 for the New Europe in Brussels, Belgium. Reddy is with NERA Economic
 Consulting in Cambridge, MA. We are grateful for financial support for
 our research from Microsoft. We also thank Robert Hahn and Anne
 Layne-Farrar for helpful comments and James Hunter, Bryan
 Martin-Keating, and Irina Danilkina for exceptional research
 assistance.

Campbell-Kelly is a historian of computer science, who strongly
believes in the value of patents for CS -- and believes that any
patent problems are no different to those other industries have faced
and surmounted (eg typewriters, automobiles...).

He knows his subject, and his research grant is paid for by Microsoft,
but that is, unfortunately, not stated in his paper.

The above cited Center for the New Europe also has an "interesting"
paper on its website:

 * http://www.cne.org/pub_pdf/2005_05_00_Simonnot_White_Paper_EN.pdf
 * http://www.cne.org/pub_pdf/2005_05_00_Simonnot_White_Paper_FR.pdf

Quote:

 5.d. The reasons for the success of free software.

 Since the patentability of software is in the nature of things and the
 practice of the European Patent Office has evolved to obey this
 nature, one can ask oneself about the success of free software. The
 fact is that the open source movement has numerous supporters.

 [...]

 (b) Believers in free software who think that software and intellectual
     creations should not be treated as property;

 [...]

 (i) Ideological interests of 21st century socialists, seeking to ensure
     the collective ownership of key sectors of the economy;
 (j) Anti-capitalist zealots;
 (k) Those who hold anti-American views, who see the software industry as
     dominated by the United States.

The 50 'good' US-patents:

5339392 Individual 1994 FGAS GUI 109 Apparatus and method for creation of a user definable video displayed document showing changes in real time data 

4305131 Individual 1981 FGAS Video 174 Dialog between TV movies and human viewers 

5093914 AT&T 1992 FGSS PL 175 Method of controlling the execution of objectoriented programs 

4821220 Tektronix 1989 FGSS PL 150 System for animating program operation and displaying time-based 

5151987 IBM 1992 FGSS PL 123 Recovery objects in an object oriented computing environment 

4667290 501 Philon 1987 FGSS PL 119 Compilers using a universal intermediate language 

5136705 Tektronix 1992 FGSS TS 109 Method of generating instruction sequences for controlling data flow 

4277837 IBM 1981 LGAS BC 144 Personal portable terminal for financial transactions 

5220501 Online Res. 1993 LGAS BC 142 Method and system for remote delivery of retail banking services 

4799156 Strat. Process. 1989 LGAS BC 138 Interactive market management system 

5557518 Citibank 1996 LGAS BC 54 Trusted agents for open electronic commerce 

4922432 Int. Chip 1990 LGAS CAD 138 Knowledge based method and apparatus for designing integrated circuits using functional specifications 

4558413 Xerox 1985 LGAS CASE 263 Software version management system 

4809170 Apollo 1989 LGAS CASE 145 Computer device for aiding in the development of software system 

5155847 Minicom 1992 LGAS CASE 117 Method and apparatus for updating software at remote locations 

5347632 Prodigy 1994 LGAS Com 136 Reception system for an interactive computer network and method of operation 

5333266 IBM 1994 LGAS Com 119 Method and apparatus for message handling in computer systems 

5406557 Nat. Semicond. 1995 LGAS Com 56 Interenterprise electronic mail hub 5181162 Kodak 1993 LGAS DB 198 Document management and production system 

5133075 HP 1992 LGAS DB 164 Method of monitoring changes in attribute values of object in an object-oriented database 

4853843 Tektronix 1989 LGAS DB 122 System for merging virtual partitions of a distributed database 

4769772 Bull 1988 LGAS DB 107 Automated query optimization method using both global and parallel local optimizations for materialization access planning for distributed databases 

4992940 H-Renee 1991 LGAS DB 107 System and method for automated selection of equipment for purchase through input of user desired specifications 

5499371 Persistence 1996 LGAS DB 59 Method and apparatus for automatic generation of object oriented code for mapping relational data to objects 

5560005 ActaMed 1996 LGAS DB 57 Methods and systems for object-based relational distributed databases 5437027 Texas Inst. 1995 LGAS DB 52 System and method for database management supporting object-oriented programming 

5008853 Xerox 1991 LGAS GUI 193 Representation of collaborative multi-user activities relative to shared structured data objects in a networked workstation environment 

5572643 Individual 1996 LGAS GUI 173 Web browser with dynamic display of information objects during linking

4555775 AT&T 1985 LGAS GUI 170 Dynamic generation and overlaying of graphic windows for multiple active program storage areas 

5041992 U. Pittsburgh 1991 LGAS GUI 169 Interactive method of developing software interfaces 

5119475 Schlumberger 1992 LGAS GUI 157 Object-oriented framework for menu definition 

4813013 Cadware 1989 LGAS GUI 149 Schematic diagram generating system using library of general purpose interactively selectable graphic primitives to create special applications icons 

4885717 Tektronix 1989 LGAS GUI 148 System for graphically representing operation of object-oriented programs 

5072412 Xerox 1991 LGAS GUI 120 User interface with multiple workspaces for sharing display system objects 

5500929 Taligent 1996 LGAS GUI 55 System for browsing a network resource book with tabs attached to pages 

5524195 Sun 1996 LGAS GUI 48 Graphical user interface for interactive television with an animated agent 

5530852 Sun 1996 LGAS IR 125 Method for extracting profiles and topics from a first file written in a first markup language and generating files in different markup languages containing the profiles and topics for use in accessing data described by the profiles and topics 

4658370 Teknowledge 1987 LGAS KB 114 Knowledge engineering tool 

4591983 Teknowledge 1986 LGAS KB 113 Hierarchical knowledge system 

4649515 Westinghouse 1987 LGAS KB 111 Methods and apparatus for system fault diagnosis and control 

5241671 Enc. Britannica 1993 LGAS MM 137 Multimedia search system using a plurality of entry path means which indicate interrelatedness of information 

5307456 Sony 1994 LGAS MM 107 Integrated multi-media production and authoring system 

4630201 Int. Security 1986 LGAS Sec 122 On-line and off-line transaction security system using a code generated from a transaction parameter and a random number 

5550984 Matsushita 1996 LGAS Sec 55 Security system for preventing unauthorized communications between networks by translating communications received in ip protocol to non-ip protocol to remove address and routing services information 

4953080 HP 1990 LGSS FS 146 Object management facility for maintaining data in a computer system 

5050090 R.J. Renolds 1991 LGSS FS 115 Object placement method and apparatus 

5329619 Software AG 1994 LGSS MW 127 Cooperative processing interface and communication broker for heterogeneous computing environments 

4819159 Tolerant Sys. 1989 LGSS MW 120 Distributed multiprocess transaction processing system and method 

5497463 Bull 1996 LGSS MW 52 Ally mechanism for interconnecting nondistributed computing environment (DCE) and DCE systems to operate in a network system 

5125091 Hazox 1992 LGSS RTS 122 Object oriented control of real-time processing
