== Nelson Cruz replies to LinuxInsider article ==

->
[ [:LinuxInsiderEn: LinuxInsider]
| [:SwpatcninoEn: Patent news]
]

----

''7 April 2005 - Nelson Cruz, editor of the pcmanias.com website, writes a letter to the lawyer-author of yet another opinion piece on'' [:LinuxInsiderEn: LinuxInsider/TechNewsWorld] ''extolling the virtues of unlimited patentability in Europe. As usual, the original article's author did not think it was necessary to use any factual information to back up his wild assertions.''

(/note:/ The opinions expressed on this page are not necessarily those of FFII)

== Letter ==

  Dear Mr. Lee,
  
  Sorry for intruding your email box, but I would like to comment your
  "Software Should Be Patentable in Europe" article on LinuxInsider and
  since I'm not registered there (or willing to do so) I can't do it on
  the site.
  
  1 - "why is hardware worthy of patent protection, but software is
  not?"
  The low cost of making software is one reason, but there are others.
  More important is that software is ideas/logic
  algorithms/methods/procedures translated to a programming language. It
  can be said that a patent and the software it protects describe the
  same thing, one in lawyer readable format and the other in machine
  readable format. Therefore a software patent covers an idea -
  knowledge! Not an invention based on that knowledge. You should know
  that many ideas, methods, procedures and mathematical algorithms
  previously not patentable are being patented under the guise of
  software (that doesn't even have to exist to get the patent).
  
  This is not giving equal treatment to software, it's something new.
  Patents don't work like this in any other field (although they may
  come close on hardware). Pfizer doesn't get the power to exclude
  competing drugs to Viagra, only the manufacture of the chemical Pfizer
  developed and patented. Fiat doesn't get the monopoly on "common-rail"
  diesel injection, only the right to prevent others from copying their
  designs, their implementations of the common-rail principle/idea.
  Copyright does exactly that for software.
  
  2 - "Copyright Provides Little Protection"
  The true investment in software, what really begs for protection,
  isn't the ideas and functionalities. Those are easy to come up with.
  The genius is in making good, functional, bug free code. I can think
  of things I would like computers to do... but programming them is
  something totally different. A good example is voice recognition.
  Everyone knows computers can do it, poorly today but one day theyll
  do it perfectly. Its not difficult to imagine it; the trick is to
  actually DO it! 
  
  You must surely be aware of the IP "parasite" companies that patent
  any useful idea they can imagine and then just wait until someone
  comes up with the same ideas and actually program them to charge
  royalties. Software patents promote their existence, and there will be
  more and more of them in the future.
  
  3 - "In the United States, the Patent Office has addressed the
  execution issue by hiring more examiners, investing in better prior
  art search tools and resources, and tightening examination
  procedures."
  Maybe they have, but is it really working? Are there fewer software
  patents being granted today? I haven't seen signs of it. Even
  Microsoft has been asking for measures to increase the quality of
  patents. So that must not be working very well... and the USPTO has
  been dealing with SW patents for 10-15 years. So excuse us Europeans
  for not thinking the EPO will do a better job. Every PO has an
  interest in granting as many patents as it can get away with. That's
  where the funding comes from.
  
  4 - "That's akin to throwing out the baby with the bath water."
  The problem is to accurately define what is the baby, and what is the
  bath water. How do we keep only the baby? The EPO, UKPTO, EU
  legislators, judges and others have been playing around with the
  "technical contribution" concept trying to do just that. So far I have
  not seen anything really workable.
  
  5 - "But how can a small company prevent its competitors from
  pilfering its software innovations, once they hit the market?"
  The true question is how can a small company put a product on the
  market without "pilfering" the patented innovations of the big
  companies? A single application can incorporate hundreds of
  potentially already patented ideas. It has been said it is impossible
  to make any software in the US today without infringing someone's
  patent (most likely patents... plural!). And a patent isn't worth much
  to a small company unless they have the money to take it to court (the
  costs go from 500.000 to 4 million dollars depending on how many
  appeals). So if Microsoft imitates your innovation and refuses to
  remove it or to pay any royalties, you need 4 million to backup your
  patent or it is worthless! And thats excluding any counter suits
  Microsoft may bring for infringing some of its patents. Microsoft by
  contrast has 50 billion in cash reserves, plenty of lawyers and
  thousands of patents. Do you still think patents can be of any help to
  a small company?
  
  6 - "Patents level the playing field, and provide small companies with
  the time they need to become large companies."
  The playing field is best leveled by copyright, wish is free and
  automatic, and by the right to imitate others. All innovation starts
  with something that already exists.
  
  7 - "Patents also add value because they help small companies raise
  money."
  Experienced venture capitalists have realized that a software patent
  isn't worth much, and the risks for being sued for a patent you didn't
  know about are huge. See this declaration for example signed by
  several VCs:
  http://www.mysql.com/company/legal/patent_declaration.html
  (Benchmark Capital is the company behind the startup capital of eBay
  for example)
  
  8 - "Software Patents, Open Source Can Co-Exist"
  They can, and they have. But that depends on the kindness of patent
  holders. Nothing guarantees that will be the case in the future. I
  know of at least one free software project that was stopped by threats
  of legal action. 
  
  9 - "Prohibiting software patents means that companies cannot protect
  their inventions, and thus effectively forces everyone to open-source
  their software."
  That's preposterous! Both commercial and free/open-source software can
  co-exist under copyright, in fact they both depend on it. The same may
  not happen under patents.
  
  10 - "But that restriction is only about 20 years, a relatively short
  period in the scheme of things."
  What scheme of things can that possibly be????? Most types of
  applications today didn't even exist 20 years ago! The average life of
  a software product version is 18 months!!! Patents usually take years
  to be granted, and then stay valid for 20 years! Don't you see the
  mismatch here? This means software patents likely aren't in force when
  their holders need them the most, and then for 20 years they just
  serve as a barrier to follow-on innovation. 
  
  11 - "While the public cannot use the patented software without the
  patent owner's authorization, the public can study and build upon the
  inventors' work."
  Patent databases might in the future become a good depository of
  software technology that is useful to the professional programmers.
  But 20 years of monopoly is a VERY high price to pay for that! And it
  is unlikely. For one patents don't contain the source code of the
  invention. That's like a patent for a machine without the schematics.
  And they are cryptic and written in a language that is very foreign to
  programmers. Its very hard for anyone but an experienced specialized
  lawyer to understand what a patent actually covers. Programmers don't
  read patents looking for ideas! In fact many lawyers discourage it,
  because of triple damages if you willingly infringe a patent. 
  
  12 - "Patents promote innovation."
  The software industry doesn't need the patent incentive to innovate.
  To remain competitive a company must put out new better versions on a
  regular base. And existing costumers won't buy a new version unless
  it's worth it either. This is all the incentive needed right here.
  With patents however companies can get monopolies on crucial
  functionalities, exclude the competition and sit on their laurels
  because they have eliminated the main incentive to continue
  innovating. The companies that want software patents dont want them
  so they can innovate more, but because they can use them to exclude
  competitors. And so they wont need to innovate so much. Success in
  the software industry shouldn't be a sprint race to get a patent, but
  a marathon of constant innovation.
  
  I therefore strongly disagree that "Software Should Be Patentable in
  Europe". And the CEO of Computer Associates, an American company,
  recently said that it shouldn't too. 
  
  Software patents are a failed American experiment that only benefit
  lawyers and IP parasite companies (mostly made of lawyers). They
  dont incentive innovation, they incentive litigation. 
  
  I'm European (Portuguese), as well as amateur technology journalist
  and a software user. I much prefer that companies compete openly in
  the market for consumer preference, rather than to compete in
  courtrooms. 
  
  Best regards,
  Nelson Cruz
  Editor of PCManias.com

== Background information ==

 * [http://www.linuxinsider.com/story/A-Long-Term-View-Software-Should-Be-Patentable-in-Europe-41921.html The LinuxInsider/TechNewsWorld article]
 * [:LinuxInsiderEn: LinuxInsider/TechNewsWorld background information]
