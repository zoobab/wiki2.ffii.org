= Summary of the differences between the Council and EP-versions =

== Article 2 - Definitions: ==

 * Council:
   * a computer-implemented invention is a computer program running on a computer.
   * a technical contribution is a contribution in a field of technology which is not obvious, but which can be entirely non-technical itself (the "claims as a whole" must contain technical features, but the technical contribution itself doesn't). "Technical" is not defined anywhere.

 * EP:
   * a computer-implemented invention is the same as any other (technical) invention, but which requires a computer or computer program to be realised.
   * a technical contribution is the same as an invention (line of thought: "what you invent, is your (technical) contribution to the state of the art")
   * "field of technology" means an "industrial application domain requiring the use of controllable forces of nature to achieve predictable results", and "technical" means "belonging to a field of technology" (makes sure that "technical" actually means something, that the EPO can no longer say that computer programs are technical if they e.g. make a computer run faster and in general that patents remain limited to physical inventions)

== Article 3 - Fields of technology, TRIPs: ==

 * Council:
   * scrapped EP article

 * EP:
   * data processing is not a field of technology (reason: TRIPs requires patents to be available for all "inventions" in all "fields of technology" -> make sure we are compatible with TRIPs when forbidding software patents, as all software does is instructing a computer to process data; note: does not render technical inventions which also involve or perform data processing unpatentable)


== Article 4 - Limitations for patentability: ==

 * Council:
   * inventions which involve computer programs that "not produce any technical effects beyond the normal physical interactions between a program and the computer" are not patentable. Problem: "the normal physical interaction between a program and a computer" means as much as "the normal physical interaction between a recipe and a cook", i.e. nothing. The EPO itself even wants to get rid of this confusing statement, see the bottom red rectangle at http://swpat.ffii.org/letters/cons0406/text/index.en.html#ed24@A2)
   * The source code or object code of a computer program is not patentable (4.1 (new) "a computer program as such is not patentable" + the Council's "whether expresses as source code, object code or any other form" in 4.2). This is useless, since nobody would ever want to patent something like that (you can protect those things for free and much stronger using copyright).

 * EP:
   * This article was not entirely properly amended by the EP, but that didn't matter so much: this article is supposed to add limits to prevent pure software from being patentable. However, that is already taken care of by the EP's amendments to article 2. So this article becomes more or less superfluous in the EP's version.


== Article 5 - Form of claims: ==

''(i.e. what you can ask a monopoly for after you have a patentable invention; note that in the final version, this has become article 7)''

 * Council:
   * 5.1: you can get a monopoly on a computer executing a computer program
   * 5.2: you can get a monopoly on a computer program on its own, if you also asked for a monopoly on this computer program executing on a computer. Note that "on its own" is different from "as such" in the Council's mindset: the latter means "the source code of one particular program", the former means "*any* program that, when run on a computer, executes something that the software patent covers". The practical result of 5.2 is that not only the usage of such computer programs, but also their publication becomes forbidden.

 * EP:
   * you can never get a monopoly on simply the "computer program executed by a computer" or the "computer program on its own"
   * you can never get a monopoly on the production, handling, processing, distribution and publication of information
   * you have to provide a reference implementation of a computer program if you mention the use of a computer program in your monopolies (a bit similar to demanding blueprints of technical inventions; without some source code, society gets nothing useful in return for the monopoly)


== Article 6 - Interoperability: ==

''(in the final version, this has become article 9)''

 * Council:
   * Reverse engineering and decompilation may not be be forbidden using patents (this is a tautology: patents simply cannot be used to forbid those things, they fall entirely under copyright law; patents are about usage of something, not about studying it)
   * in recitals 17/18: you cannot use patents to infringe on the European anti-trust law (another tautology, you are never allowed to infringe the anti-trust law; additionally, (intellectual) property law falls under the jurisdiction of member states, so European authorities are severely handicapped here: they must first show the infringements have a big influence in a field where they do have jurisdiction before they can take action; finally, there is no way there is going to be an anti-trust case every time someone files a complaint about being blocked by a patent from interoperating)

 * EP:
   * You can never use a patent to block someone else from interoperating with your product
