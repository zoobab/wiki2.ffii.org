= Patent misinformation? Depends on where you stand. =

->
[
[:SwpatcninoEn: Patent news]
]

----

''Bruce Epstein'' [http://www.onlamp.com/pub/wlg/6634 reacts] ''in his blog to an'' [http://www.oreillynet.com/pub/a/network/2005/03/08/softwarepatents.html article] ''posted on O'Reilly Net about the European patent situation. He cries foul and claims it's full of misinformation. Below, we go over most of his points and analyse his claims.''

=== Comments ===

''The numbering follows the comments in the'' [http://www.onlamp.com/pub/wlg/6634 article] ''I'm reacting to.''

'''1.''' It's indeed possible to argue that software patents can also help !SMEs, but the !SMEs themselves argue against that. See declarations by [:Ceapme050201En: CEA-PME] (represents 500,000 European !SMEs) and [http://www.ueapme.org/docs/press_releases/pr_2005/050307_Computer_Patent.pdf UEAPME] (represents 11 million European !SMEs). The problem with the Microsoft argument is that this disregards

 * the fact that Microsoft has a lot more patents than you, and if you ship a product you probably infringe on a lot more patents of theirs than the other way round. This strategy only works if you are a patent parasite (like e.g. Eolas).
 * If you want to go to court, this costs between [http://www.ffii.org/~jmaebe/conf0411/tue/Brian%20Kahin.pdf $500,000 and $4,000,000] (see slide 9, presentation by [http://www.si.umich.edu/~kahin/bio.html Brian Kahin]). Most !SMEs simply cannot afford this (neither offensively nor defensively). Those and other costs are why economists often talk about the high transaction costs of the patent system.

Software patents generally simply do not help you if Microsoft or another big player imitates you, on the contrary.

'''2.''' Regarding the progress bar, they meant that it would not be excluded anymore by its nature. You seem to be unaware of the fact that the European Patent Convention [http://www.european-patent-office.org/legal/epc/e/ar52.html article 52] states that computer programs, presentation of information, and several related things are not inventions in the sense of patent law, so long as the patent relates to those things as such.

There's a whole discussion between proponents and opponents of software patents as to [http://wiki.ffii.org/TheMeaningOfAsSuchEn what that as such means], but suffice to say that even most proponents of software patents in Europe think the principle behind the progress bar shouldn't be patentable. Nonetheless, the European Patent Office [http://swpat.ffii.org/patents/txt/ep/0394/160/ did grant a patent on it] to IBM at one time (against the rules of the European Patent Convention), but the patent has been discontinued by IBM since October 2004 (they didn't continue paying the fees).

'''3.''' European patent law has a long tradition in only allowing patents for so-called "technical inventions". In absence of a definition in the law, the meaning of "technical" has over the years been reinterpreted by the European Patent Office (as well as by some national ones, and also by a number of courts) from something like "concrete and physical" to the stuff that that's listed [http://www.iusmentis.com/patents/businessmethods/epc/#TheexclusionofArticle522and3EPC here] under the heading ''"When is something technical"''.

'''5.''' Patents both encourage and discourage investments. If the chance that your own product will infringe on a lot of other patents is very high, the risk of your investment actually increases in a situation where patents are allowed (even if you have the money to patent the innovations in your own product).

See for example [http://www.mysql.com/company/legal/patent_declaration.html this declaration] by a bunch of venture capital firms. Benchmark Capital is the company behind the startup capital of e.g. eBay.

'''6.''' You're right broad patents are not limited to software patents. Nonetheless, software patents do seem to be more susceptible to that problem, and often result in so-called "wish patents", as explained by [:BakelsMyths0405En: Reinier Bakels] (a Dutch lawyer and law scholar who wrote a report on software patents for the European Parliament).

'''7.''' See the remark about the venture capital firms. Also have a look at [:ConsParl0406En: many economic studies] carried out on that subject. And before you reply that you are certain that at least as many exist which state the contrary: I'd love to see them. The only one I know of is [http://papers.ssrn.com/sol3/papers.cfm?abstract_id=510103 this one], and is [http://k.lenz.name/LB/archives/000831.html debunked here].

'''8.''' The main problem is that there is very little data available on the effects of (software) patents on !SMEs. As long as you remain under the radar of the big guys and patent parasites, there's no problem. Otherwise, if you get a claim, it's often cheaper to get a license for $50,000 than a court case for $500,000. Companies are generally reluctant to publicise this info however, as those are not events they want to focus attention on (they had to pay money to be able to continue what they were doing before).

Therefore there are virtually no statistics about often that happens. The only statistics we have are about cases which actually went to court. See the last slide in [http://www.ffii.org/~jmaebe/conf0411/tue/Jim%20Bessen.pdf this presentation] by [http://www.researchoninnovation.org Jim Bessen] for those. We can only assume that many more cases do not make it to court than those which do. Consequently, the only real data points you have here are court cases and what !SMEs themselves say.

'''9.''' You're correct in saying no one performs patent searches when developing software, which sort of defeats the whole "disclosure in return for a monopoly" principle of the patent system. Large companies can easily deal when problems pop up later, for small ones it's more difficult. See also point (2) on page 12 of [http://www.isi.fhg.de/ti/Soft_summary.pdf this summary] of a study by the Fraunhofer (mp3!) and Max Planck Institutes.

'''10.''' Both trademarks and trade secrets can be classified under the generic term "intellectual property". The term generally merely refers to intangible assets. The part that's misleading about the grouping is that apart from being intangible, they have nothing in common and have quite different effects (demonstrated by the fact that you did/do not consider trademarks to be among them).

'''12.''' Your argument is based on the misconception that it is virtually impossible to accidentally infringe on another company's patents. The [http://www.ovum.co.uk/go/content/c,50373 inverse is true]. Additionally, in some cases you just have no choice, as in the case of official or de facto standards. They call it the "networking effects": the more interoperable your program is, the more valuable it becomes. An image processing program which cannot handle JPEG is virtually worthless, regardless of its merits.

'''13.''' Patent trolls are unique in the sense that they are unaffected by patents of the defendant, so that "defensive patenting" becomes useless. These companies generally employ 2 "scientists" and 50 lawyers. Every week the scientists hold brainstorm sessions with the lawyers writing down as many patentable ideas as possible. They don't pump new capital into the tech industry, they extract capital from it, most of which goes to said lawyers.

You may think this is a perfectly valid business model, but consumers only profit from an innovation if it's actually incorporated in products. If this kind of business is indeed more advantageous than developing products (you get the benefits of the patents without the downsides) and more and more companies switch to that model, we get a problem.

Add to that developments like [http://www.msnbc.msn.com/id/6478691/site/newsweek/ Myhrvold Intellectual Ventures], whose sole goal is to buy up small patent trolls in order to become the biggest of them all (supported by a few large companies who get to use those patents in return), and you get some really scary patent power concentration.

'''14.''' I don't understand what makes you think that people have unfettered rights to get monopolies on plain (albeit new) ideas. As you nicely cited from the US constitution before, the rationale for patents is not that you have a right to them, but that they should be advantageous for the economy and society (by promoting "science and useful arts"). If that last condition is not fulfilled, there no reason for society (congress) to grant those rights.

There is no economic (or other) law which dictates that temporary monopolies on whatever (useful) product of the mind will on the whole encourage rather than hamper innovation. As those studies I cited above show, there are even quite a few indications to the contrary in so far computer-implemented mathematics, presentation of information etc is concerned.

'''15.''' Patents are not about the right to use a particular piece of software (that's regulated by copyright). What you describe means that you are using the same idea or algorithm. Can a mathematical algorithm (or an application of it) belong to someone? That depends on whether you accept software patents or not. And whether or not you accept those, should not depend on some feeling about a "natural right" (it is even generally acknowledged that there is [http://www.ffii.org/~jmaebe/swpat/conf1404/bakelspres.pdf no such right] in so far patents are concerned, as opposed to in case of copyright and tangible property), but on whether or not they have an overall good effect.

'''16.''' You might be interested in [http://web.archive.org/web/20030407041027/http%3a//www.youmaybenext.com/ this website]. It was set up by a bunch of companies who were being sued by a patent holding company called !PanIP (!PanIP never thought they'd stick together, so gave up and went looking elsewhere for easier targets), which does own patents covering selling over the Internet in a certain sense.

You're right they always have to claim some sort of "implementation", but in practice the resulting monopolies are almost always very broad (as you mentioned yourself before).

Regarding Amazon's 1-click patent, you're the first person I've seen that actually tries to defend it. Would Amazon not have developed that "invention" if they knew they wouldn't be able to patent it? Would other people not know about that "invention" or how to implemented it if Amazon hadn't published it in a patent? Patents are in practice used as strategic business tools, but always keep in mind the original goal of patents.

'''17.''' There are indeed general quality problems with the patent system, and those are even coming [:Martin041109En: back to haunt] the Western companies that abuse this fact and at the same time accuse the Chinese of "stealing" everything.

Your argument of throwing away the baby with the bath water can also be reversed: are all those problems actually worth it? Is the overall positive effect of software patents greater than what's caused by the practical problems (which may or may not be solvable within reasonable time) and the nature of software combined?

'''18.''' The problem is that software patents in first instance decrease competition, see e.g. the the middle slide on page 4 of [http://www.oecd.org/dataoecd/48/46/12599659.pdf this presentation] (by a very pro software patents person from the European Commission). And the FTC report from 2003 concluded that not patents, but competition is in fact the main driving force of [http://www.ffii.org.uk/swpat/ftc/ftc.html#software innovation in the software sector].

'''19.''' They might want to give that "away for free" because there's a much higher chance of losing money in the patent system than gaining any, especially as a small player. It's like playing the lottery for small entities. For large companies it's more like an insurance system however.

'''20.''' Patents and copyright are indeed different in nature, but from a software producing business perspective it doesn't matter: in both cases, they apply (or don't) to the product you want to sell. You are wrong regarding what copyright protects however, it covers a lot more than literal copying. Phoenix didn't use a clean room approach to [http://www.computerworld.com/softwaretopics/software/appdev/story/0,10801,65532,00.html reverse engineer and re-implement] the IBM PC bios just for fun.

'''22.''' Your reply regarding "it's new, so it can't be obvious" perfectly illustrates why the obviousness test doesn't work in practice. Patent law is indeed only a hair away from allowing trivial patents, since if it's trivially different from whatever has been published before, you can argue it wasn't obvious. Since there is no way to measure the "height" of an invention, this is indeed an inherent (and long recognised) problem of patent law. [http://swpat.ffii.org/stidi/frili/index.en.html#sys This discussion] between a Deputy Director of the UK Patent Office and a programmer can also be enlightening.

Regarding making the distinction, that's an entirely other discussion. There's a very long text about that [http://swpat.ffii.org/stidi/korcu/index.en.html here], and you could also read the German High Patent Court's [http://swpat.ffii.org/papers/bgh-dispo76/index.en.html "Disposition program"] judgement from 1976.

In so far getting the implementation right is concerned: I propose they do that first in the US, check whether software patents then have more positive than negative effects and if so, we can still introduce them under those fixed rules in Europe.

''Jonas Maebe, jmaebe __at__ ffii.org''
