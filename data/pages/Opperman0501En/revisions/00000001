## -*- dok: opperman0501; lang: en; coding: iso-8859-1; mode: fundamental; -*-
= Craig Opperman, Ian Clarke, Lenz debate "Folly" of Legislating against Software Patents =
->
[ [:CraigOppermanEn: Craig Opperman]
| [:EubsaTechEn: 1Click & EU Directive]
| [http://swpat.ffii.org/papers/europarl0309/cons0401/tab/ Council vs Parliament]
| [:SwpatcninoEn: Patent News]
]
----

Patent Attorney Craig Opperman, a Californian pundit on "europeanising" US business method applications, writes about the EU Council's Political Agreement of 2004-05-18: "Under the compromise text, therefore, computer-implemented algorithms and business methods, in addition to protocols and data formats, are regarded as inventions", and speaks out other truths which his European colleagues have mostly been trying to hide.

In an ongoing debate or Ian Clarke (founder of the 
[http://freenetproject.org/ Freenet Project] and 
CEO of [http://cematics.com/ Cematics])
with US IP lawyer Craig Opperman, Opperman
defines as a "pure programming" the application of programming to
something other than to "solve a problem, improve communication,
deliver information".

The [http://locut.us/~ian/blog/archives/38-More-IP-lawyer-double-think.html blog] has such nice snippets as:

  Opperman:
  ...I would interpret programming technique not to include any
  application of computer software to solve a problem, improve
  communication, deliver infomation, etc.

  Clarke:
  ...Let me ask you a simple question : If programming techniques don't
  solve problems, what DO they do?

We hope that Clarke will not not get Opperman too exercised in EU-style sophistry.  In his US writings, Opperman is more blunt and speaks out truths that his European colleagues are trying to hide.

Opperman recently wrote a nice [http://www.iam-magazine.com/articles/CRAIG%20OPPERMAN%20ISSUE%209.pdf article] which explains how to rewrite Amazon One Click to get it granted in Europe (he's obviously not aware they tried and failed to get a European patent on it, but that failure was not due to the fact that it wasn't patentable subject matter, but because there was prior art).

It is not the first or only article of its kind.  Several have been written by Opperman's colleague [:ErwinBasinskiEn: Erwin Basinski] and partially collected in our documentation "[http://swpat.ffii.org/papers/eubsa-swpat0202/tech/ Why Amazon One-Click is a Patentable Invention According to the Proposed Directive]"

The same article also talks a lot about the political situation in Europe:
 
  "Anti-software and business-method patent lobbying efforts in Europe are
  alarmist rhetoric and more harmful than helpful to the software
  industry. Despite its media appeal, a prohibition on these patents is
  doomed to fail, as it is impossible to prohibit something that cannot be
  defined."
 
Impossible?  The Banks Committee in 1968 defined what a program was,
 
  "A computer program, that is: a set of instructions for controlling the
  sequence of operations of a data processing system, in whatever form the
  invention is presented e.g. a method of programming computers, a
  computer when programmed in a certain way and where the novelty or
  alleged novelty lies only in the program; [shall] not be patentable."
 
Opperman goes on:

  "So, instead of embarking on futile and potentially
  competition-inhibiting attempts"
 
  ...
 
  "Moreover, as any student of legislation knows, laws based on
  hype and hysteria or lacking a logical foundation are just plain bad
  public policy."
 
  "So, instead of embarking on futile and potentially
  competition-inhibiting attempts to legislate against software and
  business method patents, it is better for those who care about IP to
  manage reality."
 
  "Instead of expending precious resources on muddying the waters with
  indefinite policies on what subject matter is patentable or not, it is
  better to encourage and fund the European Patent Office (EPO) to apply
  strictly the basic novelty and non-obviousness rules of
  patentability."
 
  "These two facts, apparent prohibition and vitriolic opposition, have
  misled many in the software industry to believe the myth that,
  especially in Europe, patents do not cover software or business
  methods."

Opperman is right in as far as 
 * "Prohibitions" proposed by the patent lobby (e.g. in the Council) are empty words and lead to bad legislation.
 * No viable distinction between software and business methods has been proposed.

Opperman describes very clearly what the Council's text means:
 
  "Under the compromise text, therefore, computer-implemented algorithms
  and business methods, in addition to protocols and data formats, are
  regarded as inventions."
 
  "Much of the debate and, indeed, many political agendas, are being
  driven by this. The popular press, usually wary of reporting on
  esoteric subjects like patents, has entered the fray with gusto. So
  too, have a range of pundits, economists, academics and others, many
  of whom have never even read a patent claim, are not qualified to
  speak on the subject or who may have fairly obvious agendas."
 
It is true that many economists have never read a patent claim,
most patent attorneys never ever worked as a software programmer for a living.
However one may wonder what the "fairly obvious agendas" could be.

Maybe Opperman knows more than we do.
